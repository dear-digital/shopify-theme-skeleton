name: Shopify Theme Preview

on:
  pull_request:
    types: [opened, synchronize, reopened]
  issue_comment:
    types: [created]

jobs:
  preview:
    runs-on: ubuntu-latest
    if: github.event.pull_request.state == 'open' || (github.event_name == 'issue_comment' && github.event.issue.pull_request && contains(github.event.comment.body, '!preview'))
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm install

      - name: Check theme status
        id: theme_status
        run: node .github/scripts/check-theme-status.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number || github.event.issue.number }}
          SHOPIFY_FLAG_STORE: ${{ secrets.SHOPIFY_STORE }}
          SHOPIFY_ACCESS_TOKEN: ${{ secrets.SHOPIFY_ADMIN_API_ACCESS_TOKEN }}

      - name: Check for conflicts and relevant changes
        id: checks
        if: steps.theme_status.outputs.should_create_preview == 'true'
        run: node .github/scripts/check-conflicts.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number || github.event.issue.number }}

      - name: Deploy theme preview
        if: steps.theme_status.outputs.should_create_preview == 'true' && steps.checks.outputs.has_conflicts == 'false' && steps.checks.outputs.has_relevant_changes == 'true'
        id: deploy
        env:
          SHOPIFY_FLAG_STORE: ${{ secrets.SHOPIFY_STORE }}
          SHOPIFY_ACCESS_TOKEN: ${{ secrets.SHOPIFY_ADMIN_API_ACCESS_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number || github.event.issue.number }}
          EXISTING_THEME_ID: ${{ steps.theme_status.outputs.existing_theme_id }}
        run: node .github/scripts/shopify-theme-preview.js

      - name: Comment PR
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs');
            const output = fs.readFileSync(process.env.GITHUB_OUTPUT, 'utf8');
            const shouldCreatePreview = output.includes('should_create_preview=true');
            const hasConflicts = output.includes('has_conflicts=true');
            const hasRelevantChanges = output.includes('has_relevant_changes=true');

            // Function to check if a similar comment already exists
            async function checkExistingComments(message) {
              const comments = await github.rest.issues.listComments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
              });
              return comments.data.some(comment => comment.body.includes(message));
            }

            let commentBody;
            let shouldComment = true;

            if (!shouldCreatePreview) {
              const disabledMessage = 'Preview creation is disabled. Use !preview to enable.';
              if (await checkExistingComments(disabledMessage)) {
                shouldComment = false;
              } else {
                commentBody = disabledMessage;
              }
            } else if (hasConflicts) {
              commentBody = 'Conflicts detected. Please resolve conflicts before creating a preview.';
            } else if (!hasRelevantChanges) {
              commentBody = 'No relevant theme changes detected. Skipping preview creation.';
            } else {
              commentBody = 'Preview link: ${{ steps.deploy.outputs.preview_url }}\nTheme ID: ${{ steps.deploy.outputs.theme_id }}\nEditor URL: ${{ steps.deploy.outputs.editor_url }}';
            }

            if (shouldComment && commentBody) {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: commentBody
              });
            }

  cleanup:
    runs-on: ubuntu-latest
    if: github.event_name == 'issue_comment' && contains(github.event.comment.body, '!remove')
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Remove preview theme
        env:
          SHOPIFY_FLAG_STORE: ${{ secrets.SHOPIFY_STORE }}
          SHOPIFY_CLI_THEME_TOKEN: ${{ secrets.SHOPIFY_ADMIN_API_ACCESS_TOKEN }}
          PR_NUMBER: ${{ github.event.issue.number }}
        run: node .github/scripts/shopify-theme-cleanup.js

      - name: Update theme status
        run: node .github/scripts/update-theme-status.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.issue.number }}
