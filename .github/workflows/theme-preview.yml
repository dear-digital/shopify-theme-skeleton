name: Shopify Theme Management

on:
  pull_request:
    types: [opened, synchronize, closed]

jobs:
  manage-theme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4.1.7

      - name: Set up environment variables
        run: |
          echo "PR_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_ENV
          echo "THEME_NAME=PR-${{ github.event.pull_request.number }}" >> $GITHUB_ENV

      - name: Debug API Authentication
        run: |
          curl -v -X GET "https://${{ secrets.SHOPIFY_STORE }}/admin/api/2024-07/shop.json" \
            -H "Content-Type: application/json" \
            -H "X-Shopify-Access-Token: ${{ secrets.SHOPIFY_ADMIN_API_ACCESS_TOKEN }}"

      - name: Create and deploy PR-specific theme
        if: github.event.action != 'closed'
        run: |
          # Check if theme already exists
          THEME_ID=$(curl -s -X GET "https://${{ secrets.SHOPIFY_STORE }}/admin/api/2024-07/themes.json" \
            -H "X-Shopify-Access-Token: ${{ secrets.SHOPIFY_ADMIN_API_ACCESS_TOKEN }}" \
            | jq -r '.themes[] | select(.name=="'"$THEME_NAME"'") | .id')

          if [ -z "$THEME_ID" ]; then
            echo "Creating new theme: $THEME_NAME"
            RESPONSE=$(curl -s -X POST "https://${{ secrets.SHOPIFY_STORE }}/admin/api/2024-07/themes.json" \
              -H "Content-Type: application/json" \
              -H "X-Shopify-Access-Token: ${{ secrets.SHOPIFY_ADMIN_API_ACCESS_TOKEN }}" \
              -d '{"theme":{"name":"'"$THEME_NAME"'","role":"unpublished"}}')
            THEME_ID=$(echo $RESPONSE | jq -r '.theme.id')
            if [ -z "$THEME_ID" ]; then
              echo "Failed to create theme. Response: $RESPONSE"
              exit 1
            fi
          else
            echo "Theme already exists with ID: $THEME_ID"
          fi

          echo "Uploading theme files..."
          find . -type f \
            -not -path "*/.*" \
            -not -path "*/node_modules/*" \
            -not -name "package-lock.json" \
            -not -name "package.json" \
            -not -name "tailwind.config.js" \
            | while read -r file; do
            asset_key=${file#./}
            echo "Uploading $asset_key"
            RESPONSE=$(curl -s -X PUT "https://${{ secrets.SHOPIFY_STORE }}/admin/api/2024-07/themes/$THEME_ID/assets.json" \
              -H "Content-Type: application/json" \
              -H "X-Shopify-Access-Token: ${{ secrets.SHOPIFY_ADMIN_API_ACCESS_TOKEN }}" \
              -d '{
                "asset": {
                  "key": "'"$asset_key"'",
                  "attachment": "'"$(base64 -w 0 "$file")"'"
                }
              }')
            if echo "$RESPONSE" | jq -e '.errors' > /dev/null; then
              echo "Error uploading $asset_key: $RESPONSE"
            fi
            sleep 0.5  # Add a delay to avoid rate limiting
          done

          echo "Theme deployed: https://${{ secrets.SHOPIFY_STORE }}?preview_theme_id=$THEME_ID"

      - name: Remove PR-specific theme
        if: github.event.action == 'closed'
        run: |
          THEME_ID=$(curl -s -X GET "https://${{ secrets.SHOPIFY_STORE }}/admin/api/2024-07/themes.json" \
            -H "X-Shopify-Access-Token: ${{ secrets.SHOPIFY_ADMIN_API_ACCESS_TOKEN }}" \
            | jq -r '.themes[] | select(.name=="'"$THEME_NAME"'") | .id')

          if [ -n "$THEME_ID" ]; then
            echo "Removing theme: $THEME_NAME (ID: $THEME_ID)"
            RESPONSE=$(curl -s -X DELETE "https://${{ secrets.SHOPIFY_STORE }}/admin/api/2024-07/themes/$THEME_ID.json" \
              -H "X-Shopify-Access-Token: ${{ secrets.SHOPIFY_ADMIN_API_ACCESS_TOKEN }}")
            if echo "$RESPONSE" | jq -e '.errors' > /dev/null; then
              echo "Error removing theme: $RESPONSE"
              exit 1
            else
              echo "Theme $THEME_NAME removed successfully"
            fi
          else
            echo "Theme $THEME_NAME not found"
          fi
