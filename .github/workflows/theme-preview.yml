name: Shopify Theme Preview

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

jobs:
  preview:
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install Shopify CLI
        run: npm install -g @shopify/cli @shopify/theme

      - name: Deploy theme preview
        id: deploy
        env:
          SHOPIFY_FLAG_STORE: ${{ secrets.SHOPIFY_STORE }}
          SHOPIFY_CLI_THEME_TOKEN: ${{ secrets.SHOPIFY_ADMIN_API_ACCESS_TOKEN }}
        run: |
          echo "Listing themes:"
          shopify theme list --json | jq '.'

          EXISTING_PREVIEW_ID=$(shopify theme list --json | jq -r '.[] | select(.role == "development") | .id')
          echo "Existing Preview ID: $EXISTING_PREVIEW_ID"

          if [ -z "$EXISTING_PREVIEW_ID" ]; then
            echo "Creating new development theme"
            THEME_INFO=$(shopify theme push --unpublished --json)
            echo "Theme push output:"
            echo "$THEME_INFO" | jq '.'
            PREVIEW_ID=$(echo "$THEME_INFO" | jq -r '.theme.id')
          else
            echo "Using existing development theme"
            PREVIEW_ID=$EXISTING_PREVIEW_ID
            shopify theme push $PREVIEW_ID --json
          fi

          echo "Preview ID: $PREVIEW_ID"

          PREVIEW_URL=$(echo "$THEME_INFO" | jq -r '.theme.preview_url')
          echo "preview_url=$PREVIEW_URL" >> $GITHUB_OUTPUT
          echo "preview_id=$PREVIEW_ID" >> $GITHUB_OUTPUT

      - name: Comment PR
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Preview link: ${{ steps.deploy.outputs.preview_url }}\nTheme ID: ${{ steps.deploy.outputs.preview_id }}'
            })

  cleanup:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true || github.event.action == 'closed'
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install Shopify CLI
        run: npm install -g @shopify/cli @shopify/theme

      - name: Remove preview theme
        env:
          SHOPIFY_FLAG_STORE: ${{ secrets.SHOPIFY_STORE }}
          SHOPIFY_CLI_THEME_TOKEN: ${{ secrets.SHOPIFY_ADMIN_API_ACCESS_TOKEN }}
        run: |
          echo "Listing themes:"
          shopify theme list --json | jq '.'

          PREVIEW_ID=$(shopify theme list --json | jq -r '.[] | select(.role == "development") | .id')
          echo "Preview ID to delete: $PREVIEW_ID"

          if [ -n "$PREVIEW_ID" ]; then
            echo "Deleting preview theme"
            shopify theme delete -f $PREVIEW_ID
          else
            echo "No development theme found to delete"
          fi
