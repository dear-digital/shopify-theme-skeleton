name: Shopify Theme Management

on:
  pull_request:
    types: [opened, synchronize, closed]

jobs:
  manage-theme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4.1.7

      - name: Set up environment variables
        run: |
          echo "PR_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_ENV
          echo "THEME_NAME=PR-${{ github.event.pull_request.number }}" >> $GITHUB_ENV

      - name: Debug API Authentication
        run: |
          curl -v -X GET "https://${{ secrets.SHOPIFY_STORE }}/admin/api/2024-07/shop.json" \
            -H "Content-Type: application/json" \
            -H "X-Shopify-Access-Token: ${{ secrets.SHOPIFY_ADMIN_API_ACCESS_TOKEN }}"

      - name: Create and deploy PR-specific theme
        if: github.event.action != 'closed'
        run: |
          # Check if theme already exists
          THEME_ID=$(curl -s -X GET "https://${{ secrets.SHOPIFY_STORE }}/admin/api/2024-07/themes.json" \
            -H "X-Shopify-Access-Token: ${{ secrets.SHOPIFY_ADMIN_API_ACCESS_TOKEN }}" \
            | jq -r '.themes[] | select(.name=="'"$THEME_NAME"'") | .id')

          if [ -z "$THEME_ID" ]; then
            # Create new theme
            THEME_ID=$(curl -s -X POST "https://${{ secrets.SHOPIFY_STORE }}/admin/api/2024-07/themes.json" \
              -H "Content-Type: application/json" \
              -H "X-Shopify-Access-Token: ${{ secrets.SHOPIFY_ADMIN_API_ACCESS_TOKEN }}" \
              -d '{"theme":{"name":"'"$THEME_NAME"'","role":"unpublished"}}' \
              | jq -r '.theme.id')
          fi

          # Upload theme files
          for file in $(find . -type f); do
            asset_key=${file#./}
            curl -s -X PUT "https://${{ secrets.SHOPIFY_STORE }}/admin/api/2024-07/themes/$THEME_ID/assets.json" \
              -H "Content-Type: application/json" \
              -H "X-Shopify-Access-Token: ${{ secrets.SHOPIFY_ADMIN_API_ACCESS_TOKEN }}" \
              -d '{
                "asset": {
                  "key": "'"$asset_key"'",
                  "attachment": "'"$(base64 -w 0 $file)"'"
                }
              }'
          done

          echo "Theme deployed: https://${{ secrets.SHOPIFY_STORE }}?preview_theme_id=$THEME_ID"

      - name: Remove PR-specific theme
        if: github.event.action == 'closed'
        run: |
          THEME_ID=$(curl -s -X GET "https://${{ secrets.SHOPIFY_STORE }}/admin/api/2024-07/themes.json" \
            -H "X-Shopify-Access-Token: ${{ secrets.SHOPIFY_ADMIN_API_ACCESS_TOKEN }}" \
            | jq -r '.themes[] | select(.name=="'"$THEME_NAME"'") | .id')

          if [ -n "$THEME_ID" ]; then
            curl -X DELETE "https://${{ secrets.SHOPIFY_STORE }}/admin/api/2024-07/themes/$THEME_ID.json" \
              -H "X-Shopify-Access-Token: ${{ secrets.SHOPIFY_ADMIN_API_ACCESS_TOKEN }}"
            echo "Theme $THEME_NAME removed"
          else
            echo "Theme $THEME_NAME not found"
          fi
