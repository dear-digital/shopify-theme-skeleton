name: Shopify Theme Preview

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

jobs:
  preview:
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install Shopify CLI
        run: npm install -g @shopify/cli @shopify/theme

      - name: Deploy theme preview
        id: deploy
        env:
          SHOPIFY_FLAG_STORE: ${{ secrets.SHOPIFY_STORE }}
          SHOPIFY_CLI_THEME_TOKEN: ${{ secrets.SHOPIFY_ADMIN_API_ACCESS_TOKEN }}
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          THEME_NAME="PR-$PR_NUMBER"

          echo "Checking for existing theme: $THEME_NAME"
          THEME_LIST=$(shopify theme list --json)
          EXISTING_THEME_ID=$(echo "$THEME_LIST" | jq -r ".[] | select(.name == \"$THEME_NAME\") | .id")

          if [ -n "$EXISTING_THEME_ID" ]; then
            echo "Updating existing theme: $EXISTING_THEME_ID"
            THEME_INFO=$(shopify theme push $EXISTING_THEME_ID --json || echo '{"error": "Failed to update theme"}')
          else
            echo "Creating new theme: $THEME_NAME"
            THEME_INFO=$(shopify theme push --unpublished --json --theme "$THEME_NAME" || echo '{"error": "Failed to create theme"}')
          fi

          echo "Theme operation output:"
          echo "$THEME_INFO" | jq '.'

          if echo "$THEME_INFO" | jq -e '.error' > /dev/null; then
            echo "Error occurred during theme operation"
            exit 1
          fi

          PREVIEW_ID=$(echo "$THEME_INFO" | jq -r '.theme.id')
          PREVIEW_URL=$(echo "$THEME_INFO" | jq -r '.theme.preview_url')

          echo "Preview ID: $PREVIEW_ID"
          echo "Preview URL: $PREVIEW_URL"

          echo "preview_url=$PREVIEW_URL" >> $GITHUB_OUTPUT
          echo "preview_id=$PREVIEW_ID" >> $GITHUB_OUTPUT

      - name: Comment PR
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Preview link: ${{ steps.deploy.outputs.preview_url }}\nTheme ID: ${{ steps.deploy.outputs.preview_id }}'
            })

  cleanup:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true || github.event.action == 'closed'
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install Shopify CLI
        run: npm install -g @shopify/cli @shopify/theme

      - name: Remove preview theme
        env:
          SHOPIFY_FLAG_STORE: ${{ secrets.SHOPIFY_STORE }}
          SHOPIFY_CLI_THEME_TOKEN: ${{ secrets.SHOPIFY_ADMIN_API_ACCESS_TOKEN }}
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          THEME_NAME="PR-$PR_NUMBER"

          echo "Listing themes:"
          THEME_LIST=$(shopify theme list --json)
          echo "$THEME_LIST" | jq '.'

          PREVIEW_ID=$(echo "$THEME_LIST" | jq -r ".[] | select(.name == \"$THEME_NAME\") | .id")
          echo "Preview ID to delete: $PREVIEW_ID"

          if [ -n "$PREVIEW_ID" ]; then
            echo "Deleting preview theme for PR #$PR_NUMBER"
            DELETE_RESULT=$(shopify theme delete -f $PREVIEW_ID || echo '{"error": "Failed to delete theme"}')
            echo "$DELETE_RESULT" | jq '.'
            if echo "$DELETE_RESULT" | jq -e '.error' > /dev/null; then
              echo "Error occurred during theme deletion"
              exit 1
            fi
          else
            echo "No preview theme found for PR #$PR_NUMBER"
          fi
